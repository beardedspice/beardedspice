<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<!--
//
//  YandexMusic.plist
//  BeardedSpice
//
//  Created by Vladimir Burdukov on 3/14/14.
//  Copyright (c) 2014 Tyler Rhodes / Jose Falcon. All rights reserved.
//
-->
<dict>
    <!-- metadata -->
    <key>version</key>
    <integer>1</integer>
    <key>displayName</key>
    <string>YandexMusic</string>

    <key>accepts</key>
    <dict>
        <key>predicate</key>
        <string>SELF LIKE[c] '*music.yandex.*'</string>
        <key>tabValue</key>
        <string>url</string> <!-- current 'url' or 'title' -->
    </dict>

    <!-- Relevant javascripts go here.
    - Normal formatting is supported (can copy/paste with newlines and indentations)
    - &amp; is used to escape '&' so the file is readable.
    -->
    <key>isPlaying</key>
    <string>(function(){return (document.querySelector('.player-controls__btn_play.player-controls__btn_pause') != null);}())</string>

    <key>toggle</key>
    <string>(function(){document.querySelector('div.b-jambox__play, .player-controls__btn_play').click()})()</string>

    <key>previous</key>
    <string>(function(){document.querySelector('div.b-jambox__prev, .player-controls__btn_prev').click()})()</string>

    <key>next</key>
    <string>(function(){document.querySelector('div.b-jambox__next, .player-controls__btn_next').click()})()</string>

    <key>pause</key>
    <string>(function() {
        var e = document.querySelector('.player-controls__btn_play');
        if(e!=null){
            if(e.classList.contains('player-controls__btn_pause')){e.click()}
        }else{
            var e=document.querySelector('div.b-jambox__play');
            if(e.classList.contains('b-jambox__playing')){e.click()}
        }
    })()</string>

    <key>favorite</key>
    <string>(function(){$('.player-controls .like.player-controls__btn').click();})()</string>

    <!-- Generate dictionary of namespaced key/values here. All manipulation should be supported in javascript.
    - Namespaced keys currently supported include: track, album, artist, favorited, image
    -->
    <key>trackInfo</key>
    <string>(function(){
        var track = $('.track.track_type_player').get(0);
        return {
            'track': $('.track__title', track)[0].innerText,
            'artist': $('.track__artists', track)[0].innerText,
            'favorited': $('.player-controls__track-controls .like.player-controls__btn').hasClass('like_on'),
            'image': $('.album-cover', track).attr('src')
        }})()</string>
</dict>
</plist>
