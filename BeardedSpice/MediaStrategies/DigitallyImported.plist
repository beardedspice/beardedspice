<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<!--
//
//  DigitallyImported.plist
//  BeardedSpice
//
//  Created by Dennis Lysenko on 4/4/15.
//  Copyright (c) 2015 Tyler Rhodes / Jose Falcon. All rights reserved.
//
-->
<dict>
    <!-- metadata -->
    <key>version</key>
    <integer>1</integer>
    <key>displayName</key>
    <string>Digitally Imported</string>

    <key>accepts</key>
    <dict>
        <key>predicate</key>
        <string>SELF LIKE[c] '*di.fm*'</string>
        <key>tabValue</key>
        <string>url</string> <!-- current 'url' or 'title' -->
    </dict>

    <!--
    relevant javascripts go here.
    NOTE: &amp; is used to escape '&' so the file is readable.
    -->
    <key>isPlaying</key>
    <string>(function(){
        return ($('#webplayer-region .controls .ico.icon-pause').get(0) ? true :
            (($('#webplayer-region .controls .ico.icon-spinner3').get(0) &amp;&amp; $('#webplayer-region .metadata-container .track-title .sponsor').get(0)) ? true : false));
    })()</string>

    <key>toggle</key>
    <string>(function(){ return document.querySelectorAll('div.controls a')[0].click() })()</string>

    <key>pause</key>
    <string>(function(){
        var pause = document.querySelectorAll('div.controls a')[0];
        if(pause.classList.contains('icon-pause')){ pause.click(); }
    })()</string>

    <key>favorite</key>
    <string>(function(){ $('.vote-btn.up').click(); })()</string>

    <!-- Generate dictionary of namespaced key/values here. All manipulation should be supported in javascript.
    - Namespaced keys currently supported include: track, album, artist, favorited, image
    -->
    <key>trackInfo</key>
    <string>(function(){
        var artistName = $('.artist-name').text();
        var trackName = $('.track-name').text().replace(artistName, "");
        if (artistName.length > 3) {
            artistName = artistName.substring(0, artistName.length - 3);
        }
        return {
            'artist': artistName,
            'track': trackName.replace(/\s+/, ''),
            'favorited': ($('.icon-thumbs-up-filled').get(0) ? true : false),
            'image': $('#webplayer-region .track-region .artwork img').attr('src')
        }})()</string>
</dict>
</plist>
