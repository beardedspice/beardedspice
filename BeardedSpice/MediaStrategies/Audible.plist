<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<!--
//
//  Audible.plist
//  BeardedSpice
//
//  Created by Max Borghino on 12/06/15.
//  Copyright (c) 2015 Tyler Rhodes / Jose Falcon. All rights reserved.
//
// strategy/site notes
// - favorite: sets a bookmark
// - prev: implements skip back 30 seconds
// - next: not used (alternative: we could do prev/next chapter, but this is not very useful)
// - track info: book title and author not in the player, only artwork, chapter, time/time left
-->
<dict>
    <!-- NOTE: This file MUST be viewable in xcode or validated by the plutil utility. -->
    <!-- metadata -->
    <key>version</key>
    <integer>1</integer>
    <key>displayName</key>
    <string>Audible</string>

    <key>accepts</key>
    <dict>
        <key>predicate</key>
        <string>SELF LIKE[c] '*audible.com/cloud-player*'</string>
        <key>tabValue</key>
        <string>url</string> <!-- current 'url' or 'title' -->
    </dict>

    <!-- Relevant javascripts go here.
    - Normal formatting is supported (can copy/paste with newlines and indentations)
    - &amp; is used to escape '&' so the file is readable.
    -->
    <key>isPlaying</key>
    <string>(function(){
        var p=document.querySelector('.pause');
        return (p &amp;&amp; !p.classList.contains('hide'));
    })();</string>

    <key>toggle</key>
    <string>(function(){document.querySelector('.play').click();})()</string>

    <key>previous</key>
    <string>(function(){document.querySelector('.repeat').click()})()</string>

    <key>next</key>
    <string>(function(){document.querySelector('.fav').click();})()</string>

    <key>pause</key>
    <string>(function(){
      var p=document.querySelector('.pause');
      if(p &amp;&amp; !p.classList.contains('hide')){ p.click();}
    })()</string>

    <key>favorite</key>
    <string></string>

    <!-- Generate dictionary of namespaced key/values here. All manipulation should be supported in javascript.
    - Namespaced keys currently supported include: track, album, artist, favorited, image
    -->
    <key>trackInfo</key>
    <string>(function(){
        var art=document.querySelector('.item img'),
            chapter=document.querySelector('.chapter'),
            timeCur=document.querySelector('.cur'),
            timeRem=document.querySelector('.rem');
        return {'image': art ? art.getAttribute('src') : null,
                'track': chapter ? chapter.innerText : null,
                'artist': (timeCur ? timeCur.innerText : null) + '/' + (timeRem ? timeRem.innerText : null),
        };
    )()</string>
</dict>
</plist>
