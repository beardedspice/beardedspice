<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<!--
//
//  MusicForProgramming.plist
//  BeardedSpice
//
//  Created by Max Borghino on 12/01/15.
//  Copyright (c) 2015 Tyler Rhodes / Jose Falcon. All rights reserved.
//

// strategy/site notes
// - favorite, not implemented on this site
// - single sets are long, so next/prev implements the site's forward/rewind on the set
// - track info consists only of the set number and name, no artist or artwork
-->
<dict>
    <!-- NOTE: This file MUST be viewable in xcode or validated by the plutil utility. -->
    <!-- metadata -->
    <key>version</key>
    <integer>1</integer>
    <key>displayName</key>
    <string>MusicForProgramming</string>

    <key>accepts</key>
    <dict>
        <key>predicate</key>
        <string>SELF LIKE[c] '*musicforprogramming.net/*'</string>
        <key>tabValue</key>
        <string>url</string> <!-- current 'url' or 'title' -->
    </dict>

    <!-- Relevant javascripts go here.
    - Normal formatting is supported (can copy/paste with newlines and indentations)
    - &amp; is used to escape '&' so the file is readable.
    -->
    <key>isPlaying</key>
    <string>(function(){return ( (document.querySelector('.playerControls #player_playpause').innerText === '[PAUSE]'));})();</string>

    <key>toggle</key>
    <string>(function(){document.querySelector('.playerControls #player_playpause').click();})()</string>

    <key>previous</key>
    <string>(function(){document.querySelector('.playerControls #player_rew').click()})()</string>

    <key>next</key>
    <string>(function(){document.querySelector('.playerControls #player_ffw').click()})()</string>

    <key>pause</key>
    <string>(function(){
        var playPause=document.querySelector('.playerControls #player_playpause');
        if(playPause &amp;&amp; playPause.innerText === '[PAUSE]'){
            playPause.click();
        }
    })()</string>

    <key>favorite</key>
    <string></string>

    <!-- Generate dictionary of namespaced key/values here. All manipulation should be supported in javascript.
    - Namespaced keys currently supported include: track, album, artist, favorited, image
    -->
    <key>trackInfo</key>
    <string>(function(){
        var track=document.querySelector('.selected');
        return {
            'track': track ? track.innerText : ''
        }
    })()</string>
</dict>
</plist>
