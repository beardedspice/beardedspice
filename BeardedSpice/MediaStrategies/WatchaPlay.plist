<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<!--
//
//  WatchaPlayStrategy.m
//  BeardedSpice
//
//  Created by KimJongMin on 2016. 3. 1..
//  Copyright © 2016년 BeardedSpice. All rights reserved.
//
// strategy/site notes
// - favorite, not implemented on this site
// - next/prev not solved here, TODO: send left/right arrow key events for 5 second skips
-->
<dict>
    <!-- NOTE: This file MUST be viewable in xcode or validated by the plutil utility. -->
    <!-- metadata -->
    <key>version</key>
    <integer>1</integer>
    <key>displayName</key>
    <string>Watcha Play</string>

    <key>accepts</key>
    <dict>
        <key>predicate</key>
        <string>SELF LIKE[c] '*play.watcha.net/watch*'</string>
        <key>tabValue</key>
        <string>url</string>
    </dict>

    <!-- Relevant javascripts go here.
    - Normal formatting is supported (can copy/paste with newlines and indentations)
    - &amp; is used to escape '&' so the file is readable.
    -->
    <key>isPlaying</key>
    <string>(function(){
        var v = document.querySelector('video');
        return v &amp;&amp; !v.paused;
    })();</string>

    <key>toggle</key>
    <string>(function(){
        var v=document.querySelector('video');
        if (v) { v.paused ? v.play() : v.pause(); }
    })()</string>

    <key>previous</key>
    <string></string>

    <key>next</key>
    <string></string>

    <key>pause</key>
    <string>(function(){
        var v=document.querySelector('video');
        v &amp;&amp; v.pause();
    })()</string>

    <key>favorite</key>
    <string></string>

    <!-- Generate dictionary of namespaced key/values here. All manipulation should be supported in javascript.
    - Namespaced keys currently supported include: track, album, artist, favorited, image
    -->
    <key>trackInfo</key>
    <string>(function(){
        var track = document.querySelector('.vjs-display');
        return {
            track: track ? track.innerText : ''
        }
    })()</string>
</dict>
</plist>
